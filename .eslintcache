[{"C:\\Users\\sanna\\formazione\\src\\index.js":"1","C:\\Users\\sanna\\formazione\\src\\Login.jsx":"2","C:\\Users\\sanna\\formazione\\src\\components\\loginForm.js":"3","C:\\Users\\sanna\\formazione\\src\\components\\apiCall.js":"4","C:\\Users\\sanna\\formazione\\src\\Router.jsx":"5","C:\\Users\\sanna\\formazione\\src\\components\\ApiCall.js":"6"},{"size":239,"mtime":1612359316457,"results":"7","hashOfConfig":"8"},{"size":1130,"mtime":1612359714968,"results":"9","hashOfConfig":"8"},{"size":1663,"mtime":1612429123465,"results":"10","hashOfConfig":"8"},{"size":481,"mtime":1612356434564,"results":"11","hashOfConfig":"8"},{"size":536,"mtime":1612359497259,"results":"12","hashOfConfig":"8"},{"size":2818,"mtime":1612370580147,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"196uj9u",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\sanna\\formazione\\src\\index.js",[],["28","29"],"C:\\Users\\sanna\\formazione\\src\\Login.jsx",[],"C:\\Users\\sanna\\formazione\\src\\components\\loginForm.js",["30"],"C:\\Users\\sanna\\formazione\\src\\components\\apiCall.js",[],"C:\\Users\\sanna\\formazione\\src\\Router.jsx",[],"C:\\Users\\sanna\\formazione\\src\\components\\ApiCall.js",["31"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { get } from 'http';\r\n\r\nfunction ApiCall() {\r\n\r\n    \r\n    const [randomPersonInfo, setRandomPersonInfo] = useState([]);\r\n\r\n    const url = 'https://randomuser.me/api';\r\n    \r\n\r\n    const fetchData = async () =>{\r\n        try {\r\n            const { data } = await axios.get(url);\r\n            return data;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        fetchData().then((data) =>{\r\n            setRandomPersonInfo(data.results);\r\n        });\r\n    }, [])\r\n\r\n    const getUsername = (userInfo) =>{\r\n        const {name: {first, last}} = userInfo;\r\n        return `${first} ${last}`;\r\n    }\r\n\r\n    const getGender = (userInfo) =>{\r\n        const {gender} = userInfo;\r\n        return `${gender}`;\r\n    }\r\n\r\n    const getAddress = (userInfo) =>{\r\n        const {location : {street: {name, number}}} = userInfo;\r\n        return `${name} ${number}`;\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({          \r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        }));\r\n\r\nconst classes = useStyles();\r\n\r\n    return (\r\n        \r\n        <Grid container spacing={3}>\r\n\r\n            {randomPersonInfo.map((userInfo, idx) => (\r\n                     <Grid item xs={12}>\r\n                         <Paper className={classes.paper} >\r\n                             {getUsername(userInfo)} \r\n                         </Paper>\r\n                     </Grid>\r\n                ))}\r\n\r\n\r\n            {randomPersonInfo.map((userInfo, idx) => (\r\n                     <Grid item xs={4}>\r\n                         <Paper className={classes.paper} >\r\n                             {getGender(userInfo)}\r\n                         </Paper>\r\n                     </Grid>\r\n                ))}\r\n\r\n            {randomPersonInfo.map((userInfo, idx) => (\r\n                     <Grid item xs={4}>\r\n                         <Paper className={classes.paper} >\r\n                             {getAddress(userInfo)}\r\n                         </Paper>\r\n                     </Grid>\r\n                ))}\r\n\r\n            {randomPersonInfo.map((userInfo, idx) => (\r\n                     <Grid item xs={4}>\r\n                         <Paper className={classes.paper} >\r\n                             {getGender(userInfo)}\r\n                         </Paper>\r\n                     </Grid>\r\n                ))}\r\n                \r\n            \r\n\r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default ApiCall;\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":6,"column":10,"nodeType":"38","messageId":"39","endLine":6,"endColumn":13},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'get' is defined but never used.","no-global-assign","no-unsafe-negation"]